(()=>{var t,e,n,r,o={345:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,".carousel-component {\n  position: relative;\n  display: flex;\n  width: 500px;\n  height: 500px;\n}\n\n.carousel-img {\n  width: 500px;\n}\n\n.carousel-button {\n  border: 0;\n  background-color: transparent;\n  color: white;\n  height: 100%;\n  font-size: 36px;\n  padding: 20px;\n  filter: opacity(0.4);\n}\n\n.carousel-button:hover {\n  filter: opacity(1);\n}\n\n.carousel-overlay {\n  position: absolute;\n}\n\n#carousel-leftbutton {\n  left: 0;\n}\n\n#carousel-rightbutton {\n  right: 0;\n}\n\n.carousel-indicator-container {\n  display: flex;\n  bottom: 0;\n  /* margin-left: auto;\n  margin-right: auto; */\n  left: 0;\n  right: 0;\n  justify-content: center;\n  align-items: center;\n  /* background-color: rgb(163, 160, 160); */\n  /* filter: opacity(0.5); */\n}\n\n.carousel-indicator {\n  filter: opacity(0.2);\n}\n\n.active {\n  filter: opacity(1);\n}\n","",{version:3,sources:["webpack://./src/carousel_style.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,SAAS;EACT,6BAA6B;EAC7B,YAAY;EACZ,YAAY;EACZ,eAAe;EACf,aAAa;EACb,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,OAAO;AACT;;AAEA;EACE,QAAQ;AACV;;AAEA;EACE,aAAa;EACb,SAAS;EACT;uBACqB;EACrB,OAAO;EACP,QAAQ;EACR,uBAAuB;EACvB,mBAAmB;EACnB,0CAA0C;EAC1C,0BAA0B;AAC5B;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;AACpB",sourcesContent:[".carousel-component {\n  position: relative;\n  display: flex;\n  width: 500px;\n  height: 500px;\n}\n\n.carousel-img {\n  width: 500px;\n}\n\n.carousel-button {\n  border: 0;\n  background-color: transparent;\n  color: white;\n  height: 100%;\n  font-size: 36px;\n  padding: 20px;\n  filter: opacity(0.4);\n}\n\n.carousel-button:hover {\n  filter: opacity(1);\n}\n\n.carousel-overlay {\n  position: absolute;\n}\n\n#carousel-leftbutton {\n  left: 0;\n}\n\n#carousel-rightbutton {\n  right: 0;\n}\n\n.carousel-indicator-container {\n  display: flex;\n  bottom: 0;\n  /* margin-left: auto;\n  margin-right: auto; */\n  left: 0;\n  right: 0;\n  justify-content: center;\n  align-items: center;\n  /* background-color: rgb(163, 160, 160); */\n  /* filter: opacity(0.5); */\n}\n\n.carousel-indicator {\n  filter: opacity(0.2);\n}\n\n.active {\n  filter: opacity(1);\n}\n"],sourceRoot:""}]);const s=a},426:(t,e,n)=>{"use strict";n.d(e,{Z:()=>s});var r=n(537),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([t.id,"body {\n  color: red;\n  background-color: rgb(59, 57, 52);\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,iCAAiC;AACnC",sourcesContent:["body {\n  color: red;\n  background-color: rgb(59, 57, 52);\n}\n"],sourceRoot:""}]);const s=a},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",r=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),r&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),r&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,r,o,i){"string"==typeof t&&(t=[[null,t,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var u=0;u<t.length;u++){var l=[].concat(t[u]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */"),a=n.sources.map((function(t){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(t," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,r=0;r<e.length;r++)if(e[r].identifier===t){n=r;break}return n}function r(t,r){for(var i={},a=[],s=0;s<t.length;s++){var c=t[s],u=r.base?c[0]+r.base:c[0],l=i[u]||0,d="".concat(u," ").concat(l);i[u]=l+1;var p=n(d),f={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(f);else{var h=o(f,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:h,references:1})}a.push(d)}return a}function o(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,o){var i=r(t=t||[],o=o||{});return function(t){t=t||[];for(var a=0;a<i.length;a++){var s=n(i[a]);e[s].references--}for(var c=r(t,o),u=0;u<i.length;u++){var l=n(i[u]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var r=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},821:(t,e,n)=>{var r={"./cat.jpg":312,"./cat2.jpeg":389,"./cat3.jpg":214,"./cat4.jpg":103,"./dog.jpg":773,"./dog2.jpeg":535,"./dog3.jpg":163,"./dog4.jpg":344};function o(t){return i(t).then((t=>n.t(t,17)))}function i(t){return n.e(902).then((()=>{if(!n.o(r,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return r[t]}))}o.keys=()=>Object.keys(r),o.resolve=i,o.id=821,t.exports=o},977:(t,e,n)=>{var r={"./cat.jpg":312,"./cat3.jpg":214,"./cat4.jpg":103,"./dog.jpg":773,"./dog3.jpg":163,"./dog4.jpg":344};function o(t){var e=i(t);return n(e)}function i(t){if(!n.o(r,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return r[t]}o.keys=function(){return Object.keys(r)},o.resolve=i,t.exports=o,o.id=977},312:(t,e,n)=>{"use strict";t.exports=n.p+"5d57a44050e75c5be513.jpg"},214:(t,e,n)=>{"use strict";t.exports=n.p+"e2ee99faefb8b4f7ba60.jpg"},103:(t,e,n)=>{"use strict";t.exports=n.p+"635930ba0e1dc3776cc7.jpg"},773:(t,e,n)=>{"use strict";t.exports=n.p+"60600adea3b7e9c4b486.jpg"},163:(t,e,n)=>{"use strict";t.exports=n.p+"46c1df9e8bd430f7cbaa.jpg"},344:(t,e,n)=>{"use strict";t.exports=n.p+"8ce03579ff1756938e78.jpg"}},i={};function a(t){var e=i[t];if(void 0!==e)return e.exports;var n=i[t]={id:t,exports:{}};return o[t](n,n.exports,a),n.exports}a.m=o,a.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return a.d(e,{a:e}),e},e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,a.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var o=Object.create(null);a.r(o);var i={};t=t||[null,e({}),e([]),e(e)];for(var s=2&r&&n;"object"==typeof s&&!~t.indexOf(s);s=e(s))Object.getOwnPropertyNames(s).forEach((t=>i[t]=()=>n[t]));return i.default=()=>n,a.d(o,i),o},a.d=(t,e)=>{for(var n in e)a.o(e,n)&&!a.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},a.f={},a.e=t=>Promise.all(Object.keys(a.f).reduce(((e,n)=>(a.f[n](t,e),e)),[])),a.u=t=>t+".bundle.js",a.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),a.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n={},r="carousel_component:",a.l=(t,e,o,i)=>{if(n[t])n[t].push(e);else{var s,c;if(void 0!==o)for(var u=document.getElementsByTagName("script"),l=0;l<u.length;l++){var d=u[l];if(d.getAttribute("src")==t||d.getAttribute("data-webpack")==r+o){s=d;break}}s||(c=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,a.nc&&s.setAttribute("nonce",a.nc),s.setAttribute("data-webpack",r+o),s.src=t),n[t]=[e];var p=(e,r)=>{s.onerror=s.onload=null,clearTimeout(f);var o=n[t];if(delete n[t],s.parentNode&&s.parentNode.removeChild(s),o&&o.forEach((t=>t(r))),e)return e(r)},f=setTimeout(p.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=p.bind(null,s.onerror),s.onload=p.bind(null,s.onload),c&&document.head.appendChild(s)}},a.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{var t;a.g.importScripts&&(t=a.g.location+"");var e=a.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var n=e.getElementsByTagName("script");n.length&&(t=n[n.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),a.p=t})(),(()=>{var t={179:0};a.f.j=(e,n)=>{var r=a.o(t,e)?t[e]:void 0;if(0!==r)if(r)n.push(r[2]);else{var o=new Promise(((n,o)=>r=t[e]=[n,o]));n.push(r[2]=o);var i=a.p+a.u(e),s=new Error;a.l(i,(n=>{if(a.o(t,e)&&(0!==(r=t[e])&&(t[e]=void 0),r)){var o=n&&("load"===n.type?"missing":n.type),i=n&&n.target&&n.target.src;s.message="Loading chunk "+e+" failed.\n("+o+": "+i+")",s.name="ChunkLoadError",s.type=o,s.request=i,r[1](s)}}),"chunk-"+e,e)}};var e=(e,n)=>{var r,o,[i,s,c]=n,u=0;if(i.some((e=>0!==t[e]))){for(r in s)a.o(s,r)&&(a.m[r]=s[r]);c&&c(a)}for(e&&e(n);u<i.length;u++)o=i[u],a.o(t,o)&&t[o]&&t[o][0](),t[i[u]]=0},n=self.webpackChunkcarousel_component=self.webpackChunkcarousel_component||[];n.forEach(e.bind(null,0)),n.push=e.bind(null,n.push.bind(n))})(),(()=>{"use strict";var t=a(379),e=a.n(t),n=a(795),r=a.n(n),o=a(569),i=a.n(o),s=a(565),c=a.n(s),u=a(216),l=a.n(u),d=a(589),p=a.n(d),f=a(426),h={};h.styleTagTransform=p(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=r(),h.insertStyleElement=l(),e()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;const A=(t,e)=>{a(821)(`./${t}`).then((t=>e.src=t.default)).catch((t=>console.error(t)))};var g=a(345),b={};b.styleTagTransform=p(),b.setAttributes=c(),b.insert=i().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=l(),e()(g.Z,b),g.Z&&g.Z.locals&&g.Z.locals;class m extends HTMLElement{constructor(){super(),this.classList.add("carousel-component"),this.img=((t,e)=>{const n=document.createElement("img");return t.appendChild(n),A(e,n),n})(this,"cat.jpg"),this.img.classList.add("carousel-img"),this.images=a(977).keys().map((t=>t.match(/[^\/]+$/)[0])),this.currentIndex=0,this.buttonLeft=document.createElement("input"),this.buttonRight=document.createElement("input"),this.buttonLeft.classList.add("carousel-button","carousel-overlay"),this.buttonRight.classList.add("carousel-button","carousel-overlay"),this.buttonLeft.id="carousel-leftbutton",this.buttonRight.id="carousel-rightbutton",this.buttonLeft.type="button",this.buttonRight.type="button",this.buttonLeft.value="<",this.buttonRight.value=">",this.buttonLeft.onclick=()=>{this.shiftIndex(-1),this.refresh()},this.buttonRight.onclick=()=>{this.shiftIndex(1),this.refresh()},this.indicatorContainer=document.createElement("div"),this.indicatorContainer.classList.add("carousel-overlay","carousel-indicator-container"),this.images.forEach((t=>{const e=document.createElement("input");e.type="button",e.classList.add("carousel-button","carousel-indicator"),e.value=".",e.onclick=()=>{this.clickIndicator(this.images.indexOf(t))},this.indicatorContainer.appendChild(e)})),this.indicators=this.indicatorContainer.querySelectorAll("input"),this.append(this.buttonLeft,this.img,this.indicatorContainer,this.buttonRight),console.log("hello world")}refresh(){this.img.src=A(this.images[this.currentIndex],this.img),this.clearIndicators(),this.activateIndicator(this.indicators[this.currentIndex])}shiftIndex(t){this.currentIndex+=t,this.currentIndex>this.images.length-1?this.currentIndex=0:this.currentIndex<0&&(this.currentIndex=this.images.length-1),console.log(this.currentIndex)}clickIndicator(t){this.currentIndex=t,this.refresh()}clearIndicators(){this.indicators.forEach((t=>{t.classList.remove("active")}))}activateIndicator(t){t.classList.add("active")}}customElements.define("carousel-component",m)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,